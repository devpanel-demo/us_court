/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getInspectorControls;
var _wp = wp,
  components = _wp.components,
  blockEditor = _wp.blockEditor;
var PanelBody = components.PanelBody,
  ToggleControl = components.ToggleControl,
  __experimentalNumberControl = components.__experimentalNumberControl,
  __experimentalText = components.__experimentalText;
var InspectorControls = blockEditor.InspectorControls;
var __ = Drupal.t;
function getInspectorControls(attributes, setAttributes) {
  var showColHeadings = attributes.showColHeadings,
    useRowHeadings = attributes.useRowHeadings,
    showCaption = attributes.showCaption,
    sortable = attributes.sortable,
    searchable = attributes.searchable,
    itemsPerPage = attributes.itemsPerPage,
    borderless = attributes.borderless,
    striped = attributes.striped,
    fixedLayout = attributes.fixedLayout,
    tableId = attributes.tableId;
  return React.createElement(InspectorControls, null, React.createElement(PanelBody, {
    title: __('General Settings')
  }, React.createElement(ToggleControl, {
    label: __('Show table caption'),
    checked: showCaption,
    onChange: function onChange() {
      setAttributes({
        showCaption: !showCaption
      });
    }
  }), React.createElement(ToggleControl, {
    label: __('Enable Columns Header'),
    checked: showColHeadings,
    onChange: function onChange() {
      if (showColHeadings) {
        setAttributes({
          sortable: false
        });
      }
      setAttributes({
        showColHeadings: !showColHeadings
      });
    }
  }), React.createElement(ToggleControl, {
    label: __('Enable Rows Header'),
    checked: useRowHeadings,
    onChange: function onChange() {
      setAttributes({
        useRowHeadings: !useRowHeadings
      });
    }
  }), showColHeadings && React.createElement(ToggleControl, {
    label: __('Sortable'),
    checked: sortable,
    onChange: function onChange() {
      setAttributes({
        sortable: !sortable
      });
    }
  }), React.createElement(ToggleControl, {
    label: __('Searchable'),
    checked: searchable,
    onChange: function onChange() {
      setAttributes({
        searchable: !searchable
      });
    }
  })), React.createElement(PanelBody, {
    title: __('Styling')
  }, React.createElement(ToggleControl, {
    label: __('Borderless'),
    checked: borderless,
    onChange: function onChange() {
      setAttributes({
        borderless: !borderless
      });
    }
  }), React.createElement(ToggleControl, {
    label: __('Striped'),
    checked: striped,
    onChange: function onChange() {
      setAttributes({
        striped: !striped
      });
    }
  }), React.createElement(ToggleControl, {
    label: __('Fixed Layout'),
    checked: fixedLayout,
    onChange: function onChange() {
      setAttributes({
        fixedLayout: !fixedLayout
      });
    }
  })));
}