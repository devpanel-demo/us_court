/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = save;
var RichText = wp.blockEditor.RichText;
function save(_ref) {
  var attributes = _ref.attributes;
  var dataBody = attributes.dataBody,
    dataHead = attributes.dataHead,
    showColHeadings = attributes.showColHeadings,
    useRowHeadings = attributes.useRowHeadings,
    caption = attributes.caption,
    sortable = attributes.sortable,
    borderless = attributes.borderless,
    striped = attributes.striped,
    fixedLayout = attributes.fixedLayout;
  var tableHead;
  var tableHeadData = dataHead.map(function (cell, colIndex) {
    return React.createElement(RichText.Content, {
      tagName: "th",
      scope: "col",
      role: "columnheader",
      className: sortable ? 'sort' : '',
      "data-sort": 'colnum-' + colIndex,
      value: cell.content
    });
  });
  if (tableHeadData.length) {
    tableHead = React.createElement("thead", null, React.createElement("tr", null, tableHeadData));
  }
  var tableBodyData = dataBody.map(function (rows) {
    var rowCells = rows.bodyCells.map(function (cell, colIndex) {
      if (useRowHeadings === true && colIndex === 0) {
        return React.createElement(RichText.Content, {
          tagName: "th",
          className: 'colnum-' + colIndex,
          scope: "row",
          value: cell.content
        });
      } else {
        return React.createElement(RichText.Content, {
          tagName: "td",
          className: 'colnum-' + colIndex,
          value: cell.content
        });
      }
    });
    return React.createElement("tr", null, rowCells);
  });
  if (tableBodyData.length) {
    return React.createElement("table", {
      className: 'usa-table' + (borderless ? ' usa-table--borderless' : '') + (striped ? ' usa-table--striped' : '') + (fixedLayout ? ' fixed-layout' : '')
    }, React.createElement(RichText.Content, {
      tagName: "caption",
      value: caption
    }), showColHeadings && tableHead, React.createElement("tbody", {
      className: "list"
    }, tableBodyData));
  }
  return null;
}