{#
/**
 * @file
 * Default theme implementation to display an example Gutenberg block server-side.
 *
 * Available variables:
 * - block_name: The Gutenberg block name.
 * - block_content: The content of this block.
 * - block_attributes: The attributes of this block.
 * - attributes: array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *
 * @see template_preprocess_gutenberg_block()
 * @see template_preprocess_gutenberg_block__uswds__alert()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('gutenberg_uswds_table/block-view') }}
{# {% set buttonAttributes = create_attribute() %}
{% set alertType = block_attributes.alertType is defined ? block_attributes.alertType : 'info' %}
{% set showIcon = block_attributes.showIcon is defined ? block_attributes.showIcon : true %}
{% set showSlim = block_attributes.showSlim is defined ? block_attributes.showSlim : false %}
{%
  set classes = [
    'usa-alert usa-alert--' ~ alertType,
    showIcon == true ? "" : "usa-alert--no-icon",
    showSlim == true ? "usa-alert--slim" : "",
  ]
%}

<div {{ buttonAttributes.addClass(classes) }}>
  <div class="usa-alert__body">
    <h4 class="usa-alert__heading">
      {{ block_attributes.heading }}
    </h4>
    <p class="usa-alert__text">
      {{ block_content }}
    </p>
  </div>
</div> #}
{%
  set classes = [
    'usa-table-container',
    block_attributes.sortable or block_attributes.searchable ? 'with-features',
    block_attributes.borderless ? 'usa-table--borderless',
    block_attributes.striped ? 'usa-table--striped',
    block_attributes.fixedLayout ? 'fixed-layout',
  ]
%}
{% set adv_table_id = random() %}
<div {{ attributes.addClass(classes).setAttribute('id', adv_table_id) }}>
  {% if block_attributes.searchable %}
    <label class="usa-label" for="input-type-text">{{ 'Search'|t }}</label>
    <input
      class="usa-input search"
      id="input-type-text"
      name="input-type-text"
      type="text"
    />
  {% endif %}
  {{ block_content }}
</div>